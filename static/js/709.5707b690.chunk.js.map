{"version":3,"file":"static/js/709.5707b690.chunk.js","mappings":"gMACA,EAAyB,uB,SCUzB,MARA,SAAgBA,GACd,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CAASC,GAAI,YAAcH,EAAMI,GAAjC,SAAsCJ,EAAMK,UCLlD,GAAgB,QAAU,yBAAyB,cAAgB,+BAA+B,KAAO,uBCAzG,EAA0B,yBCK1B,MAJA,SAAiBL,GACf,OAAO,gBAAKC,UAAWC,EAAhB,SAA4BF,EAAMM,W,wCCmF3C,IAAMC,GAAmBC,EAAAA,EAAAA,GAAU,CAEjCC,KAAM,WAFiBD,EAhBzB,SAAqBR,GACnB,OACE,iBAAMU,SAAUV,EAAMW,aAAtB,UACE,iBAAKV,UAAWC,EAAAA,KAAhB,WACE,SAACU,EAAA,EAAD,CACEC,YAAa,qBACbC,UAAWC,EAAAA,EACXV,KAAM,iBACNW,SAAU,CAACC,EAAAA,GAAUC,EAAAA,EAAAA,GAAiB,QAExC,qDAYR,EAjFA,SAAiBlB,GAEf,IAaImB,EAAkBnB,EAAMoB,QAAQC,KAAI,SAACC,GACvC,OAAO,SAAC,EAAD,CAAmBlB,GAAIkB,EAAElB,GAAIC,KAAMiB,EAAEjB,MAAxBiB,EAAElB,OAWpBmB,EAAmBvB,EAAMwB,SAASH,KAAI,SAACI,GACzC,OAAO,SAAC,EAAD,CAAoBrB,GAAIqB,EAAErB,GAAIE,QAASmB,EAAEnB,SAA3BmB,EAAErB,OAYzB,OACE,4BACE,iBAAKH,UAAWC,EAAAA,QAAhB,WACE,gBAAKD,UAAWC,EAAAA,cAAhB,SAAkCiB,KAClC,gBAAKlB,UAAWC,EAAAA,SAAhB,SAA6BqB,QAE/B,SAAChB,EAAD,CAAkBG,SA5CA,SAACgB,GACpB1B,EAAM2B,YAAYD,EAAOE,uB,UCsC9B,GAAeC,E,QAAAA,UACbC,EAAAA,EAAAA,UAtBoB,SAACC,GACrB,MAAO,CACLX,QAASW,EAAMC,YAAYZ,QAC3BI,SAAUO,EAAMC,YAAYR,SAC5BI,eAAgBG,EAAMC,YAAYJ,mBAIb,SAACK,GACxB,MAAO,CAILN,YAAa,SAACC,GACZK,GAASC,EAAAA,EAAAA,GAAcN,SAS3BO,EAAAA,EAFF,CAGEC","sources":["webpack://samurai/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.js","webpack://samurai/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://samurai/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__t-G0F\"};","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./Dialog.module.css\";\r\n\r\nfunction Dialog(props) {\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dialog;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__O5Fdi\",\"dialogs_items\":\"Dialogs_dialogs_items__YM1vp\",\"form\":\"Dialogs_form__6EeGv\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__t5CqC\"};","import s from \"./Message.module.css\";\r\n\r\nfunction Message(props) {\r\n  return <div className={s.message}>{props.message}</div>;\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport Field from \"redux-form/lib/Field\";\r\nimport reduxForm from \"redux-form/lib/reduxForm\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\n\r\nfunction Dialogs(props) {\r\n\r\n  const addNewMessage = (values) => {\r\n     props.sendMessage(values.newMessageBody);\r\n  };\r\n  // let dialogs = [\r\n  //   { id: 1, name: \"Jack\" },\r\n  //   { id: 2, name: \"Jane\" },\r\n  //   { id: 3, name: \"Paolo\" },\r\n  //   { id: 4, name: \"Vike\" },\r\n  //   { id: 5, name: \"Mari\" },\r\n  // ];\r\n\r\n  //из массива с данными, которые придут с сервера,\r\n  //нам нужно получить массив JSX элементов(наших отдельных компонент)\r\n  let dialogsElements = props.dialogs.map((d) => {\r\n    return <Dialog key={d.id} id={d.id} name={d.name} />;\r\n  });\r\n\r\n  // let messages = [\r\n  //   { id: 1, message: \"Hello\" },\r\n  //   { id: 2, message: \"Hi\" },\r\n  //   { id: 3, message: \"Yi\" },\r\n  //   { id: 4, message: \"Yo\" },\r\n  //   { id: 5, message: \"YOOO\" },\r\n  // ];\r\n\r\n  let messagesElements = props.messages.map((m) => {\r\n    return <Message key={m.id} id={m.id} message={m.message} />;\r\n  });\r\n\r\n  // let onMessageChange = (e) => {\r\n  //   let message = e.target.value;\r\n  //   props.updateNewMessageBody(message);\r\n  // };\r\n\r\n  // let onSendMessage = () => {\r\n  //   props.sendMessage();\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.dialogs}>\r\n        <div className={s.dialogs_items}>{dialogsElements}</div>\r\n        <div className={s.messages}>{messagesElements}</div>\r\n      </div>\r\n      <DialogsReduxForm onSubmit={addNewMessage} />\r\n      {/* <div className={s.form}>\r\n        <textarea\r\n          onChange={onMessageChange}\r\n          placeholder=\"Enter your message\"\r\n          value={props.newMessageBody}\r\n        />\r\n        <button onClick={onSendMessage}>Send message</button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DialogsForm(props) {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={s.form}>\r\n        <Field\r\n          placeholder={\"Enter your message\"}\r\n          component={Textarea}\r\n          name={\"newMessageBody\"}\r\n          validate={[required, maxLengthCreator(30)]}\r\n        />\r\n        <button>Send message</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({\r\n  // a unique name for the form\r\n  form: \"dialogs\",\r\n})(DialogsForm);\r\n\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  sendMessageAC,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n  // let dialogs = [\r\n  //   { id: 1, name: \"Jack\" },\r\n  //   { id: 2, name: \"Jane\" },\r\n  //   { id: 3, name: \"Paolo\" },\r\n  //   { id: 4, name: \"Vike\" },\r\n  //   { id: 5, name: \"Mari\" },\r\n  // ];\r\n\r\n  // let messages = [\r\n  //   { id: 1, message: \"Hello\" },\r\n  //   { id: 2, message: \"Hi\" },\r\n  //   { id: 3, message: \"Yi\" },\r\n  //   { id: 4, message: \"Yo\" },\r\n  //   { id: 5, message: \"YOOO\" },\r\n  // ];\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    messages: state.dialogsPage.messages,\r\n    newMessageBody: state.dialogsPage.newMessageBody,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // updateNewMessageBody: (message) => {\r\n    //   dispatch(updateNewMessageBodyAC(message));\r\n    // },\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageAC(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);;\r\n"],"names":["props","className","s","to","id","name","message","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","maxLengthCreator","dialogsElements","dialogs","map","d","messagesElements","messages","m","values","sendMessage","newMessageBody","compose","connect","state","dialogsPage","dispatch","sendMessageAC","withAuthRedirect","Dialogs"],"sourceRoot":""}